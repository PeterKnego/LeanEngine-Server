T__29=60
T__28=61
T__27=62
T__26=63
T__25=64
T__24=65
OctalLiteral=92
T__23=66
T__22=67
T__21=68
T__20=69
T__9=80
T__8=81
Identifier=99
T__7=82
T__6=83
T__5=84
T__4=85
T__19=70
T__16=73
T__15=74
T__18=71
T__17=72
T__12=77
T__11=78
T__14=75
T__13=76
T__10=79
COMMENT=101
T__80=9
T__81=8
T__82=7
T__83=6
LINE_COMMENT=102
T__85=4
T__84=5
ASSERT=98
T__87=2
T__86=3
T__88=1
WS=100
T__71=18
T__72=17
T__70=19
BinaryLiteral=93
FloatingPointLiteral=94
T__76=13
T__75=14
T__74=15
T__73=16
T__79=10
T__78=11
T__77=12
T__68=21
T__69=20
T__66=23
T__67=22
T__64=25
T__65=24
T__62=27
T__63=26
CharacterLiteral=95
T__61=28
T__60=29
T__55=34
T__56=33
T__57=32
T__58=31
T__51=38
T__52=37
T__53=36
T__54=35
T__59=30
T__50=39
T__42=47
T__43=46
HexLiteral=90
T__40=49
T__41=48
T__46=43
T__47=42
T__44=45
T__45=44
T__48=41
T__49=40
DecimalLiteral=91
StringLiteral=96
T__30=59
T__31=58
T__32=57
T__33=56
T__34=55
ENUM=97
T__35=54
T__36=53
T__37=52
T__38=51
T__39=50
T__1=88
T__0=89
T__3=86
T__2=87
'instanceof'=89
'~'=88
'=='=87
'/'=86
'/='=85
'switch'=84
'%='=83
'implements'=82
'>'=81
'||'=80
'this'=79
'&&'=78
';'=77
'volatile'=76
'return'=75
'for'=74
'protected'=73
'+'=72
'.'=71
'^'=70
'byte'=69
'import'=68
'++'=67
'static'=66
'true'=65
'catch'=64
'else'=63
'final'=62
'^='=61
'extends'=60
'+='=59
'native'=58
'break'=57
'{'=56
'...'=55
'package'=54
'void'=53
'try'=52
'?'=51
'private'=50
'int'=49
'if'=47
'&='=48
'('=45
':'=46
'while'=43
'-'=44
'synchronized'=41
','=42
'public'=39
'default'=40
'-='=38
'short'=36
']'=37
'long'=35
'enum'=97
'transient'=33
'!'=34
'assert'=98
'finally'=31
'|'=32
'class'=30
'new'=29
'|='=28
'throws'=27
'null'=26
'='=25
'@'=24
'throw'=23
')'=22
'*='=21
'%'=20
'do'=19
'super'=18
'case'=17
'strictfp'=16
'char'=15
'float'=14
'boolean'=12
'}'=13
'abstract'=11
'double'=10
'!='=9
'false'=7
'continue'=8
'<'=5
'--'=6
'*'=3
'['=4
'&'=2
'interface'=1
